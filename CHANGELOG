
-------------- Version 0.X.X [9/99/9999] ------------------
[CHANGE]: The talib module got renamed to func and moved into the talib package.
    Use "from talib import func" now.

[FIX]: Improve docstrings for indicators in talib.func.

[FIX]: Initialize and shutdown underlying TA-Lib only once each. This should
    give slight speedups when using many indicators (<5%).

[DEPRECATED]: The old moving average types that were in talib.func are now
    deprecated. See the next bullet item for the replacement, or you can continue
    using them with "from talib import deprecated" for the time being.

[NEW]: The new moving average types are in talib.MA_Type. It's a class with SMA,
    EMA, DEMA, etc attribute variables you should now use. Human-readable lookups
    are also possible by using MA_Type as a dict eg:
        MA_Type[MA_Type.SMA] # returns "Simple Moving Average"

[NEW]: In addition to the existing func interface, we now provide an enhanced
    abstract interface too. Functions in "import talib" use this interface, or
    you can use "from talib import abstract" for the full abstract interface.
    See the README, examples/example.py and talib/tests/abstract_test.py for
    more information. The full (commented) source code is mostly located in
    talib/abstract.pyx. The basic usage is very similar:

    input_arrays = { 'open': np.random.random(100),
                     'high': np.random.random(100),
                     'low': np.random.random(100),
                     'close': np.random.random(100),
                     'volume': np.random.random(100) }
    ema_20 = abstract.Function('ema', input_arrays, 20).outputs # function names not case-sensitive
    slowd, slowk = abstract.Function('STOCH')(input_arrays, 15, 3, 0, 3, 0)
    upper, middle, lower = abstract.Function('bbands')(input_arrays, timeperiod=20)
